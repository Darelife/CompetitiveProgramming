import numpy as np

# Create a list of days for each month
days = list(range(10, 31))
days += list(range(1, 32))
days += list(range(1, 32))
days += list(range(1, 29))
days += list(range(1, 32))
days += list(range(1, 31))
days += list(range(1, 32))


# Initialize an empty array to store the arranged days
dayArr = np.zeros((7, (len(days) + 6) // 7), dtype=int)

# Fill the array with the days in the desired format
for i in range(len(days)):
    dayArr[i % 7, i // 7] = days[i]

# Print the days in the specified format
for row in dayArr:
    # print(row)
    for i in row:
        if len(str(i)) == 1:
            print(f"{i}_", end=" ")
        else:
            print(i, end=" ")
    print()
    # print(" ".join(map(str, row)))


# 10 17 24 1_ 8_ 15 22 29 5_ 12 19 26 2_ 9_ 16 23 2_ 9_ 16 23 30 6_ 13 20 27 4_ 11 18 25
# 11 18 25 2_ 9_ 16 23 30 6_ 13 20 27 3_ 10 17 24 3_ 10 17 24 31 7_ 14 21 28 5_ 12 19 26
# 12 19 26 3_ 10 17 24 31 7_ 14 21 28 4_ 11 18 25 4_ 11 18 25 1_ 8_ 15 22 29 6_ 13 20 27
# 13 20 27 4_ 11 18 25 1_ 8_ 15 22 29 5_ 12 19 26 5_ 12 19 26 2_ 9_ 16 23 30 7_ 14 21 28
# 14 21 28 5_ 12 19 26 2_ 9_ 16 23 30 6_ 13 20 27 6_ 13 20 27 3_ 10 17 24 1_ 8_ 15 22 29
# 15 22 29 6_ 13 20 27 3_ 10 17 24 31 7_ 14 21 28 7_ 14 21 28 4_ 11 18 25 2_ 9_ 16 23 30
# 16 23 30 7_ 14 21 28 4_ 11 18 25 1_ 8_ 15 22 1_ 8_ 15 22 29 5_ 12 19 26 3_ 10 17 24 31

# * __ __ 24 __ __ __ __ __ __ __ __ __ __ __ __ 23 __ 9_ __ 23 __ __ __ __ __ __ __
# * __ __ 25 __ __ __ __ __ __ __ __ __ __ __ __ 24 __ __ __ 24 __ __ __ __ __ __ __
# * 12 19 26 __ 10 17 24 __ 7_ 14 __ 28 4_ 11 __ 25 __ 11 __ 25 __ 8_ __ 22 29 6_ __
# * 13 __ 27 __ 11 __ 25 __ 8_ __ __ 29 __ 12 __ 26 __ 12 __ 26 2_ __ __ 23 __ 7_ __
# * 14 __ 28 __ 12 __ 26 __ 9_ __ __ 30 6_ 13 __ 27 __ 13 __ 27 __ 10 __ 24 1_ 8_ __
# * 15 __ 29 __ 13 __ 27 __ 10 __ __ 31 __ __ __ 28 __ 14 __ 28 __ 11 __ 25 __ __ __
# * 16 23 30 7_ 14 21 28 4_ 11 __ __ 1_ 8_ 15 __ 1_ 8_ 15 __ 29 5_ 12 __ 26 3_ 10 __

text = """
# 10 17 __ __ __ 15 __ __ 5_ 12 __ __ 2_ 9_ 16 __ 2_ __ __ 23 __ 6_ 13 20 __ 4_ 11 18
# 11 __ 25 __ 9_ __ 23 __ 6_ __ 20 __ 3_ __ __ __ 3_ __ __ 24 __ 7_ __ __ __ 5_ __ __
# 12 __ 26 __ 10 __ 24 __ 7_ __ 21 __ 4_ __ __ __ 4_ __ __ 25 __ 8_ __ __ __ 6_ __ __
# 13 __ 27 __ 11 18 25 __ 8_ 15 22 __ 5_ 12 19 __ 5_ __ __ 26 __ 9_ 16 23 __ 7_ 14 21
# 14 __ 28 __ 12 __ 26 __ 9_ 16 __ __ 6_ __ __ __ 6_ __ __ 27 __ 10 __ __ __ 8_ __ __
# 15 __ 29 __ 13 __ 27 __ 10 __ 24 __ 7_ __ __ __ 7_ __ __ 28 __ 11 __ __ __ 9_ __ __
# 16 23 __ __ 14 __ 28 __ 11 __ 25 __ 8_ 15 22 __ 8_ 15 __ 29 __ 12 __ __ __ 10 17 24
"""

for i in text:
    if i == "_":
        print(" ", end="")
    else:
        print(i, end="")
print()

#       24                                     23    9     23
#       25                                     24          24
# 12 19 26    10 17 24    7  14    28 4  11    25    11    25    8     22 29 6
# 13    27    11    25    8        29    12    26    12    26 2        23    7
# 14    28    12    26    9        30 6  13    27    13    27    10    24 1  8
# 15    29    13    27    10       31          28    14    28    11    25
# 16 23 30 7  14 21 28 4  11       1  8  15    1  8  15    29 5  12    26 3  10


# 10 17 __ __ __ 15 __ __ 5_ 12 __ __ 2_ 9_ 16 __ 2_ __ __ 23 __ 6_ 13 20 __ 4_ 11 18
# 11 __ 25 __ 9_ __ 23 __ 6_ __ 20 __ 3_ __ __ __ 3_ __ __ 24 __ 7_ __ __ __ 5_ __ __
# 12 __ 26 __ 10 __ 24 __ 7_ __ 21 __ 4_ __ __ __ 4_ __ __ 25 __ 8_ __ __ __ 6_ __ __
# 13 __ 27 __ 11 18 25 __ 8_ 15 22 __ 5_ 12 19 __ 5_ __ __ 26 __ 9_ 16 23 __ 7_ 14 21
# 14 __ 28 __ 12 __ 26 __ 9_ 16 __ __ 6_ __ __ __ 6_ __ __ 27 __ 10 __ __ __ 8_ __ __
# 15 __ 29 __ 13 __ 27 __ 10 __ 24 __ 7_ __ __ __ 7_ __ __ 28 __ 11 __ __ __ 9_ __ __
# 16 23 __ __ 14 __ 28 __ 11 __ 25 __ 8_ 15 22 __ 8_ 15 __ 29 __ 12 __ __ __ 10 17 24


# 10 17          15       5  12       2  9  16    2        23    6  13 20    4  11 18
# 11    25    9     23    6     20    3           3        24    7           5
# 12    26    10    24    7     21    4           4        25    8           6
# 13    27    11 18 25    8  15 22    5  12 19    5        26    9  16 23    7  14 21
# 14    28    12    26    9  16       6           6        27    10          8
# 15    29    13    27    10    24    7           7        28    11          9
# 16 23       14    28    11    25    8  15 22    8  15    29    12          10 17 24
